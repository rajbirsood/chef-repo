#!/bin/sh
#
# Startup script for kagent
#
### BEGIN INIT INFO
# Provides:                     kagent
# Required-Start:                 
# Should-Start:                 
# Required-Stop:                  
# Default-Start:                2 3 4 5
# Default-Stop:                 0 1 6
# Short-Description:            start and stop kagent
# Description:                  Start/Stop/Restart kagent
### END INIT INFO

# Variables
START_PROG=<%= "#{node[:kagent][:base_dir]}/bin/start-agent.sh" %>
STOP_PROG=<%= "#{node[:kagent][:base_dir]}/bin/stop-agent.sh" %>
RESTART_PROG=<%= "#{node[:kagent][:base_dir]}/bin/restart-agent.sh" %>


EXEC_WITH_USER="su <%= node[:kagent][:user] %> -c"


start() {
  echo "Executing as '<%= node[:kagent][:user] %>': $START_PROG"
  $EXEC_WITH_USER "$START_PROG"
  return $?
}

stop() {
  echo "Executing as '<%= node[:kagent][:user] %>': $STOP_PROG"
  $EXEC_WITH_USER "$STOP_PROG"
  return $?
}

restart() {
  echo "Executing as '<%= node[:kagent][:user] %>': $RESTART_PROG"
  $EXEC_WITH_USER "$RESTART_PROG"
  return $?
}

status() {
  echo "Executing as '<%= node[:kagent][:user] %>': $STOP_PROG"
  PID_FILE=<%= node[:kagent][:pid_file] %>
  if [ -e $PID_FILE ] ; then
     PID=`cat $PID_FILE`
     kill -0 $PID
     return $?
  fi
  return 1
}


# user-supplied parameter to stop/start/restart process.
case "$1" in
  init)
    init
    ;;
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status
    ;;
  restart)
    restart
    ;;
  reload)
    restart
    ;;
  -h|--help)
    echo ""
    echo "usage: <prog> start|stop|restart"
    echo ""
    exit 0
    ;;
  *)
    echo $"Usage: <prog> {start|stop|restart}"
    exit 1
  esac


exit $?
